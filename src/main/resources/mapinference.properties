# Available datasets: Global, Beijing
OS=Win
data.RootPath=C:/data/
data.PythonCodeRootPath=C:/Users/uqpchao/OneDrive/code/github/map-service/src/main/python/
#data.PythonCodeRootPath=F:/OneDrive/code/github/map-service/src/main/python/
data.Dataset=Berlin
data.BoundingBoxS=116.4,116.435,39.95,39.98
data.BoundingBoxM=116.34,116.44,39.89,39.95
data.BoundingBoxL=0
data.BoundingBoxChicago=441000.060093,447999.42519,4633501.598592,4637999.749903
data.BoundingBoxBerlin=390000.822516,395198.155647,5817001.478875,5822996.116636
# Trajectory preprocessing parameters
data.TrajectoryMinimalLengthSec=-1
data.SampleMaximalIntervalSec=-1
data.NumberOfTrajectory=-1
# specs for synthetic trajectory generation
data.IsSyntheticTrajectory=false
data.Sigma=10
data.SamplingInterval=5
data.Coverage=-1
# Available map mapinference methods: LC(LineClustering from Liu2012), TM(TraceMerging from Ahmed2012), KDE(KDE-based method from
# Biagioni2012), RR(RoadRunner from He2018), CRIF(TopicModel from Zheng17), KHA (Kharita from Stanojevic18)
algorithm.mapinference.InferenceMethod=CRIF
algorithm.mapinference.kde.CellSize=1
algorithm.mapinference.kde.GaussianBlur=17
# Maximum allowable angle change within a road segment
algorithm.mapinference.lineclustering.MaximumAngleChangeDegree=15
# Epsilon for Douglas-Peucker filter
algorithm.mapinference.lineclustering.DPEpsilon=10
# Maximum merge distance between two unmatched trajectories when merging clustered trajectory segmentation
algorithm.mapinference.lineclustering.MaximumClusteringDistance=50
# Epsilon used in trace merge algorithm. The default settings in paper is 150. Our value should be 2*(trajectory_measurement_error)=100
algorithm.mapinference.tracemerge.Epsilon=100
# parameters for RoadRunner algorithm.
algorithm.mapinference.roadrunner.HistoryLength=4
algorithm.mapinference.roadrunner.NumberOfDeferredBranch=5
algorithm.mapinference.roadrunner.MinNumberOfTrajectory=2
# cell width in the algorithm. Another parameter h follows the formula h*cw=50
algorithm.mapinference.crif.CellWidth=5
# parameters for Kharita point clustering algorithm
algorithm.mapinference.pointclustering.Radius=100
algorithm.mapinference.pointclustering.DensifyDistance=20
algorithm.mapinference.pointclustering.AngleTolerance=60